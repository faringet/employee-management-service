//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var SmSurveyReportRoles = newSmSurveyReportRolesTable("public", "sm_survey_report_roles", "")

type smSurveyReportRolesTable struct {
	postgres.Table

	// Columns
	ID        postgres.ColumnInteger
	SurveyID  postgres.ColumnInteger
	RoleID    postgres.ColumnInteger
	CreatedAt postgres.ColumnTimestamp
	UpdatedAt postgres.ColumnTimestamp
	CreatedBy postgres.ColumnInteger
	UpdatedBy postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SmSurveyReportRolesTable struct {
	smSurveyReportRolesTable

	EXCLUDED smSurveyReportRolesTable
}

// AS creates new SmSurveyReportRolesTable with assigned alias
func (a SmSurveyReportRolesTable) AS(alias string) *SmSurveyReportRolesTable {
	return newSmSurveyReportRolesTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SmSurveyReportRolesTable with assigned schema name
func (a SmSurveyReportRolesTable) FromSchema(schemaName string) *SmSurveyReportRolesTable {
	return newSmSurveyReportRolesTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SmSurveyReportRolesTable with assigned table prefix
func (a SmSurveyReportRolesTable) WithPrefix(prefix string) *SmSurveyReportRolesTable {
	return newSmSurveyReportRolesTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SmSurveyReportRolesTable with assigned table suffix
func (a SmSurveyReportRolesTable) WithSuffix(suffix string) *SmSurveyReportRolesTable {
	return newSmSurveyReportRolesTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSmSurveyReportRolesTable(schemaName, tableName, alias string) *SmSurveyReportRolesTable {
	return &SmSurveyReportRolesTable{
		smSurveyReportRolesTable: newSmSurveyReportRolesTableImpl(schemaName, tableName, alias),
		EXCLUDED:                 newSmSurveyReportRolesTableImpl("", "excluded", ""),
	}
}

func newSmSurveyReportRolesTableImpl(schemaName, tableName, alias string) smSurveyReportRolesTable {
	var (
		IDColumn        = postgres.IntegerColumn("id")
		SurveyIDColumn  = postgres.IntegerColumn("survey_id")
		RoleIDColumn    = postgres.IntegerColumn("role_id")
		CreatedAtColumn = postgres.TimestampColumn("created_at")
		UpdatedAtColumn = postgres.TimestampColumn("updated_at")
		CreatedByColumn = postgres.IntegerColumn("created_by")
		UpdatedByColumn = postgres.IntegerColumn("updated_by")
		allColumns      = postgres.ColumnList{IDColumn, SurveyIDColumn, RoleIDColumn, CreatedAtColumn, UpdatedAtColumn, CreatedByColumn, UpdatedByColumn}
		mutableColumns  = postgres.ColumnList{SurveyIDColumn, RoleIDColumn, CreatedAtColumn, UpdatedAtColumn, CreatedByColumn, UpdatedByColumn}
	)

	return smSurveyReportRolesTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:        IDColumn,
		SurveyID:  SurveyIDColumn,
		RoleID:    RoleIDColumn,
		CreatedAt: CreatedAtColumn,
		UpdatedAt: UpdatedAtColumn,
		CreatedBy: CreatedByColumn,
		UpdatedBy: UpdatedByColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
