//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var TemplQuestionaryTags = newTemplQuestionaryTagsTable("public", "templ_questionary_tags", "")

type templQuestionaryTagsTable struct {
	postgres.Table

	// Columns
	ID                    postgres.ColumnInteger
	UpdatedAt             postgres.ColumnTimestamp
	CreatedAt             postgres.ColumnTimestamp
	UpdatedBy             postgres.ColumnInteger
	CreatedBy             postgres.ColumnInteger
	TagID                 postgres.ColumnInteger
	TemplateQuestionaryID postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type TemplQuestionaryTagsTable struct {
	templQuestionaryTagsTable

	EXCLUDED templQuestionaryTagsTable
}

// AS creates new TemplQuestionaryTagsTable with assigned alias
func (a TemplQuestionaryTagsTable) AS(alias string) *TemplQuestionaryTagsTable {
	return newTemplQuestionaryTagsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TemplQuestionaryTagsTable with assigned schema name
func (a TemplQuestionaryTagsTable) FromSchema(schemaName string) *TemplQuestionaryTagsTable {
	return newTemplQuestionaryTagsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TemplQuestionaryTagsTable with assigned table prefix
func (a TemplQuestionaryTagsTable) WithPrefix(prefix string) *TemplQuestionaryTagsTable {
	return newTemplQuestionaryTagsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TemplQuestionaryTagsTable with assigned table suffix
func (a TemplQuestionaryTagsTable) WithSuffix(suffix string) *TemplQuestionaryTagsTable {
	return newTemplQuestionaryTagsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTemplQuestionaryTagsTable(schemaName, tableName, alias string) *TemplQuestionaryTagsTable {
	return &TemplQuestionaryTagsTable{
		templQuestionaryTagsTable: newTemplQuestionaryTagsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                  newTemplQuestionaryTagsTableImpl("", "excluded", ""),
	}
}

func newTemplQuestionaryTagsTableImpl(schemaName, tableName, alias string) templQuestionaryTagsTable {
	var (
		IDColumn                    = postgres.IntegerColumn("id")
		UpdatedAtColumn             = postgres.TimestampColumn("updated_at")
		CreatedAtColumn             = postgres.TimestampColumn("created_at")
		UpdatedByColumn             = postgres.IntegerColumn("updated_by")
		CreatedByColumn             = postgres.IntegerColumn("created_by")
		TagIDColumn                 = postgres.IntegerColumn("tag_id")
		TemplateQuestionaryIDColumn = postgres.IntegerColumn("template_questionary_id")
		allColumns                  = postgres.ColumnList{IDColumn, UpdatedAtColumn, CreatedAtColumn, UpdatedByColumn, CreatedByColumn, TagIDColumn, TemplateQuestionaryIDColumn}
		mutableColumns              = postgres.ColumnList{UpdatedAtColumn, CreatedAtColumn, UpdatedByColumn, CreatedByColumn, TagIDColumn, TemplateQuestionaryIDColumn}
	)

	return templQuestionaryTagsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                    IDColumn,
		UpdatedAt:             UpdatedAtColumn,
		CreatedAt:             CreatedAtColumn,
		UpdatedBy:             UpdatedByColumn,
		CreatedBy:             CreatedByColumn,
		TagID:                 TagIDColumn,
		TemplateQuestionaryID: TemplateQuestionaryIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
