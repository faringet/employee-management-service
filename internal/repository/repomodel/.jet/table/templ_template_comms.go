//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var TemplTemplateComms = newTemplTemplateCommsTable("public", "templ_template_comms", "")

type templTemplateCommsTable struct {
	postgres.Table

	// Columns
	ID             postgres.ColumnInteger
	UpdatedAt      postgres.ColumnTimestamp
	CreatedAt      postgres.ColumnTimestamp
	UpdatedBy      postgres.ColumnInteger
	CreatedBy      postgres.ColumnInteger
	Name           postgres.ColumnString
	Description    postgres.ColumnString
	IsSendReport   postgres.ColumnBool
	ReminderDaysID postgres.ColumnInteger
	TimeSendReport postgres.ColumnTimestamp
	HeaderLogoID   postgres.ColumnInteger
	OwnerEntityID  postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type TemplTemplateCommsTable struct {
	templTemplateCommsTable

	EXCLUDED templTemplateCommsTable
}

// AS creates new TemplTemplateCommsTable with assigned alias
func (a TemplTemplateCommsTable) AS(alias string) *TemplTemplateCommsTable {
	return newTemplTemplateCommsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TemplTemplateCommsTable with assigned schema name
func (a TemplTemplateCommsTable) FromSchema(schemaName string) *TemplTemplateCommsTable {
	return newTemplTemplateCommsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TemplTemplateCommsTable with assigned table prefix
func (a TemplTemplateCommsTable) WithPrefix(prefix string) *TemplTemplateCommsTable {
	return newTemplTemplateCommsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TemplTemplateCommsTable with assigned table suffix
func (a TemplTemplateCommsTable) WithSuffix(suffix string) *TemplTemplateCommsTable {
	return newTemplTemplateCommsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTemplTemplateCommsTable(schemaName, tableName, alias string) *TemplTemplateCommsTable {
	return &TemplTemplateCommsTable{
		templTemplateCommsTable: newTemplTemplateCommsTableImpl(schemaName, tableName, alias),
		EXCLUDED:                newTemplTemplateCommsTableImpl("", "excluded", ""),
	}
}

func newTemplTemplateCommsTableImpl(schemaName, tableName, alias string) templTemplateCommsTable {
	var (
		IDColumn             = postgres.IntegerColumn("id")
		UpdatedAtColumn      = postgres.TimestampColumn("updated_at")
		CreatedAtColumn      = postgres.TimestampColumn("created_at")
		UpdatedByColumn      = postgres.IntegerColumn("updated_by")
		CreatedByColumn      = postgres.IntegerColumn("created_by")
		NameColumn           = postgres.StringColumn("name")
		DescriptionColumn    = postgres.StringColumn("description")
		IsSendReportColumn   = postgres.BoolColumn("is_send_report")
		ReminderDaysIDColumn = postgres.IntegerColumn("reminder_days_id")
		TimeSendReportColumn = postgres.TimestampColumn("time_send_report")
		HeaderLogoIDColumn   = postgres.IntegerColumn("header_logo_id")
		OwnerEntityIDColumn  = postgres.IntegerColumn("owner_entity_id")
		allColumns           = postgres.ColumnList{IDColumn, UpdatedAtColumn, CreatedAtColumn, UpdatedByColumn, CreatedByColumn, NameColumn, DescriptionColumn, IsSendReportColumn, ReminderDaysIDColumn, TimeSendReportColumn, HeaderLogoIDColumn, OwnerEntityIDColumn}
		mutableColumns       = postgres.ColumnList{UpdatedAtColumn, CreatedAtColumn, UpdatedByColumn, CreatedByColumn, NameColumn, DescriptionColumn, IsSendReportColumn, ReminderDaysIDColumn, TimeSendReportColumn, HeaderLogoIDColumn, OwnerEntityIDColumn}
	)

	return templTemplateCommsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:             IDColumn,
		UpdatedAt:      UpdatedAtColumn,
		CreatedAt:      CreatedAtColumn,
		UpdatedBy:      UpdatedByColumn,
		CreatedBy:      CreatedByColumn,
		Name:           NameColumn,
		Description:    DescriptionColumn,
		IsSendReport:   IsSendReportColumn,
		ReminderDaysID: ReminderDaysIDColumn,
		TimeSendReport: TimeSendReportColumn,
		HeaderLogoID:   HeaderLogoIDColumn,
		OwnerEntityID:  OwnerEntityIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
