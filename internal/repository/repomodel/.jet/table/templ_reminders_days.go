//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var TemplRemindersDays = newTemplRemindersDaysTable("public", "templ_reminders_days", "")

type templRemindersDaysTable struct {
	postgres.Table

	// Columns
	ID                 postgres.ColumnInteger
	Name               postgres.ColumnString
	Code               postgres.ColumnString
	Description        postgres.ColumnString
	UpdatedAt          postgres.ColumnTimestamp
	CreatedAt          postgres.ColumnTimestamp
	UpdatedBy          postgres.ColumnInteger
	CreatedBy          postgres.ColumnInteger
	QueueNumber        postgres.ColumnInteger
	IconColor          postgres.ColumnString
	IdCustomSvgIcon    postgres.ColumnInteger
	RemindersAfterDays postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type TemplRemindersDaysTable struct {
	templRemindersDaysTable

	EXCLUDED templRemindersDaysTable
}

// AS creates new TemplRemindersDaysTable with assigned alias
func (a TemplRemindersDaysTable) AS(alias string) *TemplRemindersDaysTable {
	return newTemplRemindersDaysTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new TemplRemindersDaysTable with assigned schema name
func (a TemplRemindersDaysTable) FromSchema(schemaName string) *TemplRemindersDaysTable {
	return newTemplRemindersDaysTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new TemplRemindersDaysTable with assigned table prefix
func (a TemplRemindersDaysTable) WithPrefix(prefix string) *TemplRemindersDaysTable {
	return newTemplRemindersDaysTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new TemplRemindersDaysTable with assigned table suffix
func (a TemplRemindersDaysTable) WithSuffix(suffix string) *TemplRemindersDaysTable {
	return newTemplRemindersDaysTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newTemplRemindersDaysTable(schemaName, tableName, alias string) *TemplRemindersDaysTable {
	return &TemplRemindersDaysTable{
		templRemindersDaysTable: newTemplRemindersDaysTableImpl(schemaName, tableName, alias),
		EXCLUDED:                newTemplRemindersDaysTableImpl("", "excluded", ""),
	}
}

func newTemplRemindersDaysTableImpl(schemaName, tableName, alias string) templRemindersDaysTable {
	var (
		IDColumn                 = postgres.IntegerColumn("id")
		NameColumn               = postgres.StringColumn("name")
		CodeColumn               = postgres.StringColumn("code")
		DescriptionColumn        = postgres.StringColumn("description")
		UpdatedAtColumn          = postgres.TimestampColumn("updated_at")
		CreatedAtColumn          = postgres.TimestampColumn("created_at")
		UpdatedByColumn          = postgres.IntegerColumn("updated_by")
		CreatedByColumn          = postgres.IntegerColumn("created_by")
		QueueNumberColumn        = postgres.IntegerColumn("queueNumber")
		IconColorColumn          = postgres.StringColumn("iconColor")
		IdCustomSvgIconColumn    = postgres.IntegerColumn("idCustomSvgIcon")
		RemindersAfterDaysColumn = postgres.IntegerColumn("reminders_after_days")
		allColumns               = postgres.ColumnList{IDColumn, NameColumn, CodeColumn, DescriptionColumn, UpdatedAtColumn, CreatedAtColumn, UpdatedByColumn, CreatedByColumn, QueueNumberColumn, IconColorColumn, IdCustomSvgIconColumn, RemindersAfterDaysColumn}
		mutableColumns           = postgres.ColumnList{NameColumn, CodeColumn, DescriptionColumn, UpdatedAtColumn, CreatedAtColumn, UpdatedByColumn, CreatedByColumn, QueueNumberColumn, IconColorColumn, IdCustomSvgIconColumn, RemindersAfterDaysColumn}
	)

	return templRemindersDaysTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:                 IDColumn,
		Name:               NameColumn,
		Code:               CodeColumn,
		Description:        DescriptionColumn,
		UpdatedAt:          UpdatedAtColumn,
		CreatedAt:          CreatedAtColumn,
		UpdatedBy:          UpdatedByColumn,
		CreatedBy:          CreatedByColumn,
		QueueNumber:        QueueNumberColumn,
		IconColor:          IconColorColumn,
		IdCustomSvgIcon:    IdCustomSvgIconColumn,
		RemindersAfterDays: RemindersAfterDaysColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
